name: PHP Composer

on:
  push:
    branches: [ stable ]
  pull_request:
    branches: [ stable ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      uses: php-actions/composer@v6
      with:
        command: install
        dev: no
        php_version: 8.0
        version: 2
        args: --ignore-platform-reqs --prefer-dist -no --no-progress

    - name: Create vendor archive
      run: tar -czf composer-dependencies.tar.gz vendor/

    - name: Composer dependencies
      uses: actions/upload-artifact@v2
      with:
        name: composer-dependencies
        path: composer-dependencies.tar.gz
        retention-days: 1

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    name: Create a new release
    needs: [build, sonarcloud]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/stable'
    steps:
      - name: Clone code repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Download Composer dependencies
        uses: actions/download-artifact@v2
        with:
          name: composer-dependencies
          path: /tmp

      - name: Extract artifacts
        run: |
          tar -xzf /tmp/composer-dependencies.tar.gz
          rm -rf /tmp/composer-dependencies.tar.gz

      - uses: geekyeggo/delete-artifact@v1
        with:
          name: composer-dependencies

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v2
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Install npm dependencies
        run: yarn

      - name: Semantic release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

          GIT_AUTHOR_NAME: ${{ secrets.GIT_USERNAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_USERNAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_EMAIL }}
          GIT_CREDENTIALS: ${{ secrets.GIT_CREDENTIALS }}
