name: PHP Composer

on:
  push:
    branches: [ stable ]
  pull_request:
    branches: [ stable ]
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Test the code and create reports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          command: install
          dev: yes
          php_version: 7.4
          version: 2
          args: --ignore-platform-reqs --prefer-dist -no --no-progress --no-plugins

      - name: Create .env for docker
        run: |
          rm -f tests/utils/.env
          echo "USER_ID=$(id -u)" >> tests/utils/.env
          echo "GROUP_ID=$(id -g)" >> tests/utils/.env

      - name: Build test container
        run: docker-compose build tests

      - name: Run tests
        run: |
          docker-compose run --rm tests --all
          docker-compose down

      - name: Compress HTML code coverage
        run: |
          cd build/
          tar -czf /tmp/code-coverage-html.tar.gz html/

      - name: Upload HTML code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-html
          path: /tmp/code-coverage-html.tar.gz
          retention-days: 1

      - name: Upload Clover code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-clover
          path: build/clover.xml
          retention-days: 1

      - name: Upload PHP-formatted code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-php
          path: build/coverage.cov
          retention-days: 1

# Currently unavailable
#      - name: Upload PHPUnit junit report
#        uses: actions/upload-artifact@v2
#        with:
#          name: phpunit-junit
#          path: build/junit.xml
#          retention-days: 1

      - name: Upload OXID metrics report
        uses: actions/upload-artifact@v2
        with:
          name: metrics
          path: build/metrics.txt
          retention-days: 1

      - name: Upload OXID pdepend report
        uses: actions/upload-artifact@v2
        with:
          name: pdepend
          path: build/pdepend.xml
          retention-days: 1

      - name: Fix code coverage paths
        # Currently unavailable: sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' build/junit.xml
        run: | 
          sed -i 's@/app/@/github/workspace/@g' build/clover.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # Currently unavailable: -Dsonar.php.tests.reportPath=build/junit.xml
          args: >
            -Dsonar.projectKey=MakairaIO_oxid-connect-essential
            -Dsonar.organization=makairaio
            -Dsonar.language=php
            -Dsonar.sources=src/
            -Dsonar.tests=tests/
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.php.coverage.reportPaths=build/clover.xml

  release:
    name: Create a new release
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/stable'
    steps:
      - name: Clone code repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          command: install
          dev: yes
          php_version: 7.4
          version: 2
          args: --ignore-platform-reqs --prefer-dist -no --no-progress

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v2
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Install npm dependencies
        run: yarn

      - name: Semantic release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_USERNAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_USERNAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_EMAIL }}
          GIT_CREDENTIALS: ${{ secrets.GIT_CREDENTIALS }}
